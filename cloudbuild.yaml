steps:
# Install npm to be able to create environment
- id: install-npm
  name: node:10.15.1
  entrypoint: npm
  args: ["install"]
# Get environment variables from gcloud build  
- id: create-env
  name: node:10.15.1
  entrypoint: npm
  args: ["run", "create-env"]
  env:
    - 'REACT_APP_FIREBASE_API_KEY=${_REACT_APP_FIREBASE_API_KEY}'
    - 'REACT_APP_FIREBASE_PROJECT_ID=${_REACT_APP_FIREBASE_PROJECT_ID}'
    - 'REACT_APP_FIREBASE_STORAGE_BUCKET=${_REACT_APP_FIREBASE_STORAGE_BUCKET}'
    - 'REACT_APP_FIREBASE_MESSAGING_SENDER_ID=${_REACT_APP_FIREBASE_MESSAGING_SENDER_ID}'
    - 'REACT_APP_FIREBASE_APP_ID=${_REACT_APP_FIREBASE_APP_ID}'
    - 'REACT_APP_FIRESTORE_COLLECTION=${_REACT_APP_FIRESTORE_COLLECTION}'
    - 'REACT_APP_API_URL=${_REACT_APP_API_URL}'
  # Build the container image
- id: build-image
  name: 'gcr.io/cloud-builders/docker'
  args: 
  - 'build'
  - '-t'
  - '${_GCR_HOSTNAME}/${PROJECT_ID}/${_SERVICE_NAME}:${COMMIT_SHA}'
  - '.'
# Push the container image to Container Registry
- id: push-image
  name: 'gcr.io/cloud-builders/docker'
  args: ['push', '${_GCR_HOSTNAME}/${PROJECT_ID}/${_SERVICE_NAME}:${COMMIT_SHA}']
# Deploy container image to Cloud Run
- id: deploy-image
  name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  entrypoint: gcloud
  args:
  - 'run'
  - 'deploy'
  - '${_SERVICE_NAME}'
  - '--image'
  - '${_GCR_HOSTNAME}/${PROJECT_ID}/${_SERVICE_NAME}:${COMMIT_SHA}'
  - '--region'
  - '${_DEPLOY_REGION}'
images:
- '${_GCR_HOSTNAME}/${PROJECT_ID}/${_SERVICE_NAME}:${COMMIT_SHA}'
timeout: '1600s'